;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(YaTeX-read-section-history c-set-style-history query-replace-history command-history buffer-name-history search-ring minibuffer-history helm-M-x-input-history extended-command-history))
(setq YaTeX-read-section-history '("frac"))
(setq query-replace-history '("(R)" "\\mathbb{R}" "(S)" "\\mathbb{S}" "(" "\\mathbb{"))
(setq command-history '((list-directory "/Users/shentianji/Dropbox/programming/report/" nil) (langtool-check-buffer) (helm-M-x nil #("langtool-check-buffer" 0 21 (match-part "langtool-check-buffer"))) (switch-to-buffer "re_multi.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "re_d.c" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_d.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (langtool-check-done) (helm-M-x nil "langtool-check-done") (langtool-check-buffer) (helm-M-x nil "langtool-check-buffer") (langtool-check-done) (helm-M-x nil "langtool-check-done") (langtool-check) (helm-M-x nil "langtool-check") (langtool-check-done) (helm-M-x nil "langtool-check-done") (langtool-check) (helm-M-x nil "langtool-check") (langtool-check) (helm-M-x nil "langtool-check") (helm-M-x nil #("describe-variable" 0 17 (match-part "describe-variable"))) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (helm-M-x nil "replace-string") (replace-string "\\mathbb{R}" "(R)" nil (if (and transient-mark-mode mark-active) (region-beginning)) (if (and transient-mark-mode mark-active) (region-end)) nil) (helm-M-x nil "replace-string") (replace-string "\\mathbb{S}" "(S)" nil (if (and transient-mark-mode mark-active) (region-beginning)) (if (and transient-mark-mode mark-active) (region-end)) nil) (helm-M-x nil "replace-string") (replace-string "\\mathbb{" "(" nil (if (and transient-mark-mode mark-active) (region-beginning)) (if (and transient-mark-mode mark-active) (region-end)) nil) (helm-M-x nil "replace-string") (switch-to-buffer "re_pr_noise.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re_pr_noise.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_noise.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_noise.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_noise.c" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "re_pr_noise.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_noise.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_noise.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_pr_opt.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re_1.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "VTC_rev3.tex" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (nonincremental-search-forward "SD") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "2017may14.tex" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil #("shell" 0 5 (match-part "shell"))) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (switch-to-buffer "re.c" nil 'force-same-window) (shell nil) (helm-M-x nil "shell") (shell nil) (helm-M-x nil "shell")))
(setq buffer-name-history '("re_multi.c" "re.c" "re_d.c" "re.c" "*shell*" "re.c" "re_d.c" "*shell*" "re_d.c" "*shell*" "re_d.c" "*shell*" "re_d.c" "re_pr_opt.c" "re.c" "re_pr_noise.c" "*shell*" "re_pr_noise.c" "re_pr_opt.c" "re.c" "re_1.c" "*shell*" "re_1.c" "re.c" "VTC_rev3.tex" "re.c" "2017may14.tex" "re.c"))
(setq search-ring '("ehc" "dviout" "in this" "m" "polint" "fmin" "Throughput" "threshold" "m1" "	" "P_r" "all nodes" "and for" "the optim" "tau" "the"))
(setq minibuffer-history '("/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/re_m" "/Users/shentianji/Dropbox/other files/shouwa.te" "/Users/shentianji/Dropbox/programming/re_m" "/Users/shentianji/Dropbox/other files/" "/Users/shentianji/Dropbox/other files/HEAVEN.tex" "/Users/shentianji/Dropbox/programming/report/2017oct" "/Users/shentianji/Dropbox/Ukyoi的LaTeX论文模板/论文模板/" "/Users/shentianji/Dropbox/programming/report/2017oc" "$" "0" "/Users/shentianji/Dropbox/Ukyoi的LaTeX论文模板/论文模板/" "\\beta\\gamma" "\\frac{\\beta}{\\gamma}" "4x" "\\beta" "$" "0" "\\frac{4(AD+BC)}{C^2}" "C" "A+D" "C^x" "AD+BC" "$" "0" "C" "A+D" "d_1^m" "(M-2) P_s |h_k|^2" "/Users/shentianji/Dropbox/programming/report/2017oct" "/Users/shentianji/Dropbox/programming/re_m" "/Users/shentianji/Dropbox/programming/report/2017oct" "/Users/shentianji/Dropbox/programming/re_mul" "/Users/shentianji/Dropbox/programming/report/2017oct" "/Users/shentianji/Dropbox/programming/report/" "/Users/shentianji/Dropbox/Ukyoi的LaTeX论文模板/论文模板/" "c" "d" "c" "d" "c" "ad" "M" "1" "$" "d/c" "c" "d" "c" "d" "c |h_k|^4 - d |h_k|^2" "a |h_k|^2 + b" "c" "d" "c" "d" "c|h_k|^4 -d |h_k|^2" "a |h_k|^2 + b" "d_1^m" "P_s |h_k|^2 \\eta" "/Users/shentianji/Dropbox/programming/report/2017o" "/Users/shentianji/Dropbox/programming/report/2017oct" "/Users/shentianji/Dropbox/programming/nrutil.h" "/Users/shentianji/Dropbox/programming/nr.h" "/Users/shentianji/Dropbox/programming/re_m" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/re_mul" "/Users/shentianji/Dropbox/programming/re_mu" "/Users/shentianji/Dropbox/programming/report/" "/Users/shentianji/Dropbox/programming/re_m" "0.33\\hsize" "/Users/shentianji/Dropbox/programming/report/2017sep" "/Users/shentianji/Dropbox/programming/report/2017" "/Users/shentianji/Dropbox/programming/re_" "/Users/shentianji/Dropbox/programming/re_m" "/Users/shentianji/Dropbox/programming/" "/Users/shentianji/Dropbox/programming/re_m" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/re_mi" "/Users/shentianji/Dropbox/programming/" "/Users/shentianji/Dropbox/programming/re_multi.c" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/conference/Tianji" "/Users/shentianji/Dropbox/conference/Tian" "/Users/shentianji/Dropbox/conference/ti" "/Users/shentianji/Dropbox/other books/sho" "/Users/shentianji/Dropbox/other books/" "/Users/shentianji/Downloads/.tex" "/Users/shentianji/Dropbox/other books/昭和史1926-1945.tex" "/Users/shentianji/Dropbox/programming/report/2017au" "/Users/shentianji/Dropbox/programming/report/" "d_2^m" "\\eta P_s |g_i|^2" "d_2^m" "|g_i|^2" "d_1^m" "|h_i|^2" "d_1^m" "\\eta P_s |h_i|^2" "/Users/shentianji/Dropbox/conference/Tian" "/Users/shentianji/Dropbox/programming/re_d" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/conference/tho" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/conference/Tian" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/conference/Tian" "/Users/shentianji/Downloads/ieee-latex-conference-template/" "/Users/shentianji/Dropbox/conference/Tian" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/conference/Tianji" "/Users/shentianji/Dropbox/programming/re_d" "/Users/shentianji/Dropbox/conference/Tian" "/Users/shentianji/Dropbox/programming/" "/Users/shentianji/Dropbox/programming/re_snr" "/Users/shentianji/Dropbox/programming/" "/Users/shentianji/Dropbox/programming/re" "/Users/shentianji/Dropbox/programming/re.c" "d_2^m" "P_d|g_i|^2" "d_1^m" "P_s |h_i|^2" "/Users/shentianji/Dropbox/conference/Tian" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/conference/Tianji" #("-40" 0 3 (inhibit-line-move-field-capture t field output rear-nonsticky t front-sticky (field inhibit-line-move-field-capture) fontified t)) "/Users/shentianji/Dropbox/programming/re" "/Users/shentianji/Dropbox/conference/" "/Users/shentianji/Dropbox/conference/Tu" "/Users/shentianji/Dropbox/conference/tian" "/Users/shentianji/Dropbox/programming/report/conference/tian" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/re_d.c" "/Users/shentianji/Dropbox/programming/re_d" "/Users/shentianji/Dropbox/programming/report/conference/tian" "/Users/shentianji/Dropbox/programming/re.c" "2" "P_r T" "/Users/shentianji/Dropbox/programming/report/conference/tian" "/Users/shentianji/Dropbox/programming/report/conference/Tian" "/Users/shentianji/.emacs.d/ini" "/Users/shentianji/Dropbox/programming/report/conference/Tian" "/Users/shentianji/.emacs.d/" "/Users/shentianji/Dropbox/programming/report/conference/tian" "/Users/shentianji/.emacs.d/in" "/Users/shentianji/dotemacs.d/ini" "/usr/local/Cellar/languagetool/3.2/" "/Users/shentianji/.emacs.d/in" "/Users/shentianji/dotemacs.d/in" "/Users/shentianji/dotemacs.d/i" "/Users/shentianji/dotemacs.d/in" "/Users/shentianji/.emacs.d/ini" "/Users/shentianji/.emacs.d/" "/Users/shentianji/Dropbox/programming/report/conference/TianjiShen_globecom.tex" "/Users/shentianji/.zshrc" "/Users/shentianji/Dropbox/programming/report/conference/" "re_pr_opt " "re_pr_ " "re_ " "re_pr_opt " "re_pr " "re " "re_pr " "re " "/Users/shentianji/Dropbox/programming/re" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/conference/" "u" "1" "\\partial P_r" "\\partial \\taua" "c" "a+d" "\\partial P_r" "\\partial \\tau" "\\partial P_r" "\\partial \\tau" "2(1 + \\frac{d_1^m d_2^m P_r}{2[d_1^m (1 - \\delta) + d_2^m \\delta]\\eta P_s})" "e^{-\\frac{a+d}{c}}" "2" "x" "2" "1" "2" "x" "2" "1" "/Users/shentianji/Dropbox/programming/report/conference/" "2" "A_1+\\sqrt{A_2}" "2\\left(1 + \\frac{d_1^m d_2^m P_r}{2[d_1^m (1 - \\delta) + d_2^m \\delta]\\eta P_s}\\right)" "e^{-\\frac{a+d}{c}}" "c" "a+d" "2" "x" "2" "1" "2" "x" "2" "1" "/Users/shentianji/Dropbox/programming/report/2017may" "/Users/shentianji/Dropbox/programming/re.c" "2" "A_1 + \\sqrt{A_2}" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "\\frac{4(ad+bc)}{c^2}" "2(1+\\frac{d_1^m d_2^m P_r}{2[d_1^m (1 - )})" "e^{-\\frac{a+d}{c}}uK_1(u)" "2[d_1^m \\eta P_s (1-\\delta)+d_2^m \\eta P_s \\delta]" "d_1^m d_2^m P_r" "2" "P_r T" "\\rho" "1" "P_r T/2" "0" "$" "P_r T/2" "0" "2" "P_r T" "\\rho" "\\frac{P_r T}{2} - E_0" "2" "P_r T" "2" "P_r T" "\\rhoh" "\\frac{P_r T}{2} - E_0" "rh" "1" "d_2^m" "P_s |g_i|^2" "d_1^m" "P_s |h_i|^2" "2" "P_r T" "2" "P_r T" "2" "P_r T" "\\frac{4(ad+bc)}{c^2}" "c\\lambda_h" "d" "c" "a" "\\lambda_h" "z" "(cz-d)\\lambda_g" "az+b" "$" "d/c" "\\lambda_h" "1" "c" "d" "c|h_i|^2 - d" "a|h_i|^2 + b" "c" "d" "c" "d" "c|h_i|^2 - d" "a|h_i|^2 + b" "2" "1" "2" "(1-I_{0,i})(1-\\alpha_i)" "\\epsilon\\rho" "\\rhoh" "1" "rh" "1" "2" "1" "2" "P_r T" "2" "P_r T" "2" "P_r T" "2" "P_r T" "X" "i=1" "2" "P_r T" "X" "i=1" "\\eta P_s d_2^m" "d_1^m" "\\eta P_s  " "d_1^m" "\\eta P_s |h_i|^2" "d_1^m" "\\eta P_s T" "r" "\\epsilon\\rho" "\\rho" "1" "d_1^m" "P_s |h_i|^2 \\eta" "c" "d" "c|h_i|^2 - d" "a|h_i|^2 + b" "c" "d" "c|h_i|^2-d" "a|h_i|^2+b" "/Users/shentianji/Dropbox/programming/report/conference/Tian" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "d_2^m" "P_s(1-\\delta)|g_i|^2" "P_s(1-\\delta)" "d_1^m" "P_s\\delta|h_i|^2" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re_1.c" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/2017may" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "SD" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/report/2017" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/2017may14" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/2017may" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/2017may" "/Users/shentianji/Dropbox/programming/re.c" "p " "D " "pr " "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/Dropbox/programming/re.c" "/Users/shentianji/Dropbox/programming/report/conference/" "/Users/shentianji/dotemacs.d/init.el" "/Users/shentianji/dotemacs.d/in"))
(setq helm-M-x-input-history '("b" "shell" "langtool" "lang" "langt" "lan" "langt" "describe-variable" "shell" #("S" 0 1 (fontified t face YaTeX-font-lock-formula-face)) "replace" "shell"))
(setq extended-command-history '(#("langtool-check-buffer" 0 21 (match-part "langtool-check-buffer")) "shell" "langtool-check-done" "langtool-check" "replace-string" "package-list-packages" "LaTeX-mode"))
